#!/usr/bin/python3 -tt

# Command line arguments follow the GNU conventions.
from getopt import gnu_getopt
from sys import argv, stderr, stdout
from csv import writer, DictWriter

# Configuration is stored in a simple ini file.
from configparser import ConfigParser

# Import the Aruba driver.
from wifinator.aruba import Aruba


if __name__ == '__main__':
    def do_essid_stats(config):
        aruba_opts = dict(config.items('aruba'))
        aruba = Aruba(aruba_opts['address'],
                      aruba_opts['username'],
                      aruba_opts['password'])

        aruba.login()

        csv = writer(stdout)

        csv.writerow(['count', 'essid'])
        for essid, count in aruba.essid_stats().items():
            csv.writerow([count, essid])

    def do_stations(config):
        aruba_opts = dict(config.items('aruba'))
        aruba = Aruba(aruba_opts['address'],
                      aruba_opts['username'],
                      aruba_opts['password'])

        aruba.login()

        csv = DictWriter(stdout, fieldnames=[
            'mac', 'name', 'role', 'age', 'auth', 'ap',
            'essid', 'phy', 'remote', 'profile',
        ])

        csv.writeheader()
        for station in aruba.list_stations().values():
            csv.writerow(station)

    def do_help(*args, **kwargs):
        print('Usage: wifinator-stats [--config=/etc/wifinator.ini] ACTION')
        print('Collect Aruba statistics.')
        print('')
        print('OPTIONS:')
        print('  --help, -h          Display this help.')
        print('  --version, -V       Display version info.')
        print('')
        print('  --config, -c file   Load alternative configuration file.')
        print('')
        print('  --essid, -e         Collect ESSID user counts.')
        print('  --stations, -s      Collect information about stations.')
        print('')
        print('Report bugs at <http://github.com/techlib/wifinator>.')

    def do_version(*args, **kwargs):
        print('wifinator-stats (NTK) 1')

    # Parse command line arguments.
    opts, args = gnu_getopt(argv, 'hVc:es', ['help', 'version', 'config=', 'essid', 'stations'])

    action = do_essid_stats
    config_path = '/etc/wifinator.ini'

    for k, v in opts:
        if k in ('--help', '-h'):
            action = do_help
        elif k in ('--version', '-V'):
            action = do_version
        elif k in ('--config', '-c'):
            config_path = v
        elif k in ('--essid', '-e'):
            action = do_essid_stats
        elif k in ('--stations', '-s'):
            action = do_stations

    # Load the configuration from file.
    if action not in (do_help, do_version):
        config = ConfigParser()
        config.read(config_path)

    # Perform the selected action.
    action(config=config)

# vim:set sw=4 ts=4 et:
# -*- coding: utf-8 -*-
